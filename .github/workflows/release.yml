name: Release

on: 
  milestone:
    types: [closed]

jobs:
  create-release-notes:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Write secrets to files
      run: |
        echo "${{ secrets.settings }}" > ../settings.xml
        echo "${{ secrets.public }}" > ../pubring.gpg
        echo "${{ secrets.private }}" > ../secring.gpg
    - name: Set version in a new branch and create a tag
      run: |
        git config --local user.name
        git config --local user.email
        git checkout -b _release_${{ github.event.milestone.title }}
        mvn versions:set -DnewVersion=${{ github.event.milestone.title }}
        git commit -am ${{ github.event.milestone.title }}
        mvn clean deploy --settings ../settings.xml
        git tag ${{ github.event.milestone.title }} -m '${{ github.event.milestone.title }}: tagged for release'
        git push origin ${{ github.event.milestone.title }}
    - name: Create Release Notes
      uses: docker://decathlon/release-notes-generator-action:2.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OUTPUT_FOLDER: temp_release_notes
        USE_MILESTONE_TITLE: "true"
    - name: test created release note
      run: |
        cat temp_release_notes/release_file.md
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_CONTENT: $(cat temp_release_notes/release_file.md)
      with:
        tag_name: ${{ github.event.milestone.title }}
        release_name: Release ${{ github.event.milestone.title }}
        body: ${{env.RELEASE_CONTENT}}
        draft: false
        prerelease: false
    - name: Upload archive Release Asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: target/concat-${{ github.event.milestone.title }}.jar
        asset_name: concat-${{ github.event.milestone.title }}.jar
        asset_content_type: application/java-archive
    - name: Upload javadoc Release Asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: target/concat-${{ github.event.milestone.title }}-javadoc.jar
        asset_name: concat-${{ github.event.milestone.title }}-javadoc.jar
        asset_content_type: application/java-archive